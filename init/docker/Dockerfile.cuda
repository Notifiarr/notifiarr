#
# This is part of Application Builder.
# https://github.com/golift/application-builder
#

FROM golang:1.24.4-bookworm AS builder

# Build speed magic!
# https://www.docker.com/blog/faster-multi-platform-builds-dockerfile-cross-compilation-guide/
WORKDIR /src
COPY main.go go.mod go.sum ./

# Cache all the needed tools.
RUN go mod download \
    && go run github.com/swaggo/swag/cmd/swag@latest -v

RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash \
    && apt install -y nodejs

COPY pkg pkg
COPY frontend frontend
COPY frontend frontend
RUN --mount=type=secret,id=FONTAWESOME_PACKAGE_TOKEN go generate ./pkg/bindata/docs \
    && mkdir -p ./frontend/dist \
    && echo "Fake frontend build." > ./frontend/dist/index.html \
    && go generate ./frontend/src/api \
    && go generate ./frontend

ARG TARGETARCH

# Download MegaCli64 binary.
RUN curl -sSo /notifiarr.tgz \
    https://raw.githubusercontent.com/Notifiarr/build-dependencies/main/notifiarr-docker-$TARGETARCH.tgz \
    && tar -zxf /notifiarr.tgz -C /

ARG TARGETOS
ARG BUILD_DATE
ARG BRANCH
ARG VERSION
ARG ITERATION
ARG COMMIT

# Build the app.
RUN GOFLAGS="-trimpath -mod=readonly -modcacherw" \
    GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -o /tmp/notifiarr -tags osusergo,netgo \
    -ldflags "-w -s -X \"golift.io/version.Branch=${BRANCH} (${COMMIT})\" \
    -X \"golift.io/version.BuildDate=${BUILD_DATE}\" \
    -X \"golift.io/version.BuildUser=docker\" \
    -X \"golift.io/version.Revision=${ITERATION}\" \
    -X \"golift.io/version.Version=${VERSION}\""

FROM nvidia/cuda:12.9.0-base-ubuntu22.04

COPY --from=builder /tmp/notifiarr /
# Other tools.
RUN apt update \
    && apt install -y smartmontools ipmitool zfsutils-linux sysstat \
    && apt clean \
    && rm -rf /var/lib/apt/lists/*
# For megacli.
COPY --from=builder /MegaCli* /libstorelibir-2.so.14.07-0 /
RUN mkdir -p /usr/lib/x86_64-linux-gnu && \
    ln -s /usr/lib/x86_64-linux-gnu/libncurses.so.6 /usr/lib/x86_64-linux-gnu/libncurses.so.5

ENV TZ=UTC
ENV PATH=/bin:/usr/bin:/sbin:/usr/sbin
ENV USER=root
ENV DN_SNAPSHOT_NVIDIA_SMI_PATH=/usr/bin/nvidia-smi

EXPOSE 5454
ENTRYPOINT [ "/notifiarr" ]

ARG TARGETOS
ARG TARGETARCH
ARG BUILD_DATE
ARG COMMIT
ARG VERSION
ARG ITERATION
ARG LICENSE=MIT
ARG SOURCE_URL=http://github.com/golift/application-builder
ARG DESC=application-builder
ARG VENDOR=golift
ARG AUTHOR=golift

# Build-time metadata as defined at https://github.com/opencontainers/image-spec/blob/master/annotations.md
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
    org.opencontainers.image.title="Notifiarr with CUDA" \
    org.opencontainers.image.documentation="https://notifiarr.wiki" \
    org.opencontainers.image.description="${DESC}" \
    org.opencontainers.image.url="${SOURCE_URL}" \
    org.opencontainers.image.revision="${COMMIT}" \
    org.opencontainers.image.source="${SOURCE_URL}" \
    org.opencontainers.image.vendor="${VENDOR}" \
    org.opencontainers.image.authors="${AUTHOR}" \
    org.opencontainers.image.architecture="${TARGETOS} ${TARGETARCH}" \
    org.opencontainers.image.licenses="${LICENSE}" \
    org.opencontainers.image.version="${VERSION}-${ITERATION}"
